<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Tip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="img_play.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>